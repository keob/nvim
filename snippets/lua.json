{
    "assert": {
        "prefix": "assert",
        "body": "assert($1, $0)",
        "description": "assert()"
    },
    "collectgarbage": {
        "prefix": "cg",
        "body": "collectgarbage($0)",
        "description": "collectgarbage()"
    },
    "coroutine.create": {
        "prefix": "ccre",
        "body": "coroutine.create(\n\t${0:function}\n)",
        "description": "coroutine.create()"
    },
    "coroutine.isyieldable": {
        "prefix": "ciyie",
        "body": "coroutine.isyieldable()",
        "description": "coroutine.isyieldable()"
    },
    "coroutine.resume": {
        "prefix": "cres",
        "body": "coroutine.resume($1, $0)",
        "description": "coroutine.resume()"
    },
    "coroutine.running": {
        "prefix": "crun",
        "body": "coroutine.running()",
        "description": "coroutine.running()"
    },
    "coroutine.status": {
        "prefix": "cstat",
        "body": "coroutine.status(${0:coroutine})",
        "description": "coroutine.status()"
    },
    "coroutine.wrap": {
        "prefix": "cwrap",
        "body": "coroutine.wrap(\n\t${0:function}\n)",
        "description": "coroutine.wrap()"
    },
    "coroutine.yield": {
        "prefix": "cyie",
        "body": "coroutine.yield($0)",
        "description": "coroutine.yield()"
    },
    "for": {
        "prefix": "for",
        "body": "for ${1:i}=${2:1},${3:10} do\n\t${0}\nend",
        "description": "for i loop"
    },
    "fori": {
        "prefix": "fori",
        "body": "for ${1:i},${2:v} in ipairs(${3:table_name}) do\n\t${0}\nend",
        "description": "for i, v in ipairs()"
    },
    "forp": {
        "prefix": "forp",
        "body": "for ${1:k},${2:v} in pairs(${3:table_name}) do\n\t${0}\nend",
        "description": "for k,v in pairs()"
    },
    "function": {
        "prefix": "function",
        "body": "function ${1:name}(${2:...})\n\t${0:-- body}\nend",
        "description": "function()"
    },
    "getfenv": {
        "prefix": "getfenv",
        "body": "getfenv(${0:...})",
        "description": "getfenv()"
    },
    "getmetatable": {
        "prefix": "getmetatable",
        "body": "getmetatable(${1:object})",
        "description": "getmetatable (object)"
    },
    "if": {
        "prefix": "if",
        "body": "if ${1:condition} then\n\t${0:-- body}\nend",
        "description": "if statement"
    },
    "ifel": {
        "prefix": "ifel",
        "body": "if ${1:condition} then\n\t${2:-- body}\nelse\n\t${0:-- body}\nend",
        "description": "if else statement"
    }
}
